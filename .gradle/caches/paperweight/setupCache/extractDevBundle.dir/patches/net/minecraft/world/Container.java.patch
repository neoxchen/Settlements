--- a/net/minecraft/world/Container.java
+++ b/net/minecraft/world/Container.java
@@ -5,8 +5,12 @@
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.crafting.Recipe;
+import org.bukkit.craftbukkit.v1_19_R2.entity.CraftHumanEntity;
+// CraftBukkit end
 
 public interface Container extends Clearable {
+
     int LARGE_MAX_STACK_SIZE = 64;
 
     int getContainerSize();
@@ -21,19 +25,15 @@
 
     void setItem(int slot, ItemStack stack);
 
-    default int getMaxStackSize() {
-        return 64;
-    }
+    int getMaxStackSize(); // CraftBukkit
 
     void setChanged();
 
     boolean stillValid(Player player);
 
-    default void startOpen(Player player) {
-    }
+    default void startOpen(Player player) {}
 
-    default void stopOpen(Player player) {
-    }
+    default void stopOpen(Player player) {}
 
     default boolean canPlaceItem(int slot, ItemStack stack) {
         return true;
@@ -42,10 +42,11 @@
     default int countItem(Item item) {
         int i = 0;
 
-        for(int j = 0; j < this.getContainerSize(); ++j) {
-            ItemStack itemStack = this.getItem(j);
-            if (itemStack.getItem().equals(item)) {
-                i += itemStack.getCount();
+        for (int j = 0; j < this.getContainerSize(); ++j) {
+            ItemStack itemstack = this.getItem(j);
+
+            if (itemstack.getItem().equals(item)) {
+                i += itemstack.getCount();
             }
         }
 
@@ -53,19 +54,45 @@
     }
 
     default boolean hasAnyOf(Set<Item> items) {
-        return this.hasAnyMatching((stack) -> {
-            return !stack.isEmpty() && items.contains(stack.getItem());
+        return this.hasAnyMatching((itemstack) -> {
+            return !itemstack.isEmpty() && items.contains(itemstack.getItem());
         });
     }
 
     default boolean hasAnyMatching(Predicate<ItemStack> predicate) {
-        for(int i = 0; i < this.getContainerSize(); ++i) {
-            ItemStack itemStack = this.getItem(i);
-            if (predicate.test(itemStack)) {
+        for (int i = 0; i < this.getContainerSize(); ++i) {
+            ItemStack itemstack = this.getItem(i);
+
+            if (predicate.test(itemstack)) {
                 return true;
             }
         }
 
         return false;
     }
+
+    // CraftBukkit start
+    java.util.List<ItemStack> getContents();
+
+    void onOpen(CraftHumanEntity who);
+
+    void onClose(CraftHumanEntity who);
+
+    java.util.List<org.bukkit.entity.HumanEntity> getViewers();
+
+    org.bukkit.inventory.InventoryHolder getOwner();
+
+    void setMaxStackSize(int size);
+
+    org.bukkit.Location getLocation();
+
+    default Recipe getCurrentRecipe() {
+        return null;
+    }
+
+    default void setCurrentRecipe(Recipe recipe) {
+    }
+
+    int MAX_STACK = 64;
+    // CraftBukkit end
 }
